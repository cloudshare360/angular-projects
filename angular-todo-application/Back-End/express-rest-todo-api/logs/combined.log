{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32müöÄ Todo API Server running on port 3000\u001b[39m","timestamp":"2025-09-21 09:20:02:202"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32müìö API Documentation: http://localhost:3000/api-docs\u001b[39m","timestamp":"2025-09-21 09:20:02:202"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32müè• Health Check: http://localhost:3000/health\u001b[39m","timestamp":"2025-09-21 09:20:02:202"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32müåç Environment: development\u001b[39m","timestamp":"2025-09-21 09:20:02:202"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32mConnected to MongoDB\u001b[39m","timestamp":"2025-09-21 09:20:02:202"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32mSIGTERM signal received: closing HTTP server\u001b[39m","timestamp":"2025-09-21 09:20:11:2011"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32müöÄ Todo API Server running on port 3000\u001b[39m","timestamp":"2025-09-21 09:21:17:2117"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32müìö API Documentation: http://localhost:3000/api-docs\u001b[39m","timestamp":"2025-09-21 09:21:17:2117"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32müè• Health Check: http://localhost:3000/health\u001b[39m","timestamp":"2025-09-21 09:21:17:2117"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32müåç Environment: development\u001b[39m","timestamp":"2025-09-21 09:21:17:2117"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32mConnected to MongoDB\u001b[39m","timestamp":"2025-09-21 09:21:17:2117"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m::1 - - [21/Sep/2025:14:34:52 +0000] \"GET /api-docs HTTP/1.1\" 301 158 \"-\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36\"\u001b[39m","timestamp":"2025-09-21 09:34:52:3452"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m::1 - - [21/Sep/2025:14:34:53 +0000] \"GET /api-docs/ HTTP/1.1\" 200 - \"-\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36\"\u001b[39m","timestamp":"2025-09-21 09:34:53:3453"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m::1 - - [21/Sep/2025:14:34:53 +0000] \"GET /api-docs/swagger-ui-init.js HTTP/1.1\" 200 - \"-\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36\"\u001b[39m","timestamp":"2025-09-21 09:34:53:3453"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m::1 - - [21/Sep/2025:14:34:53 +0000] \"GET /api-docs/swagger-ui.css HTTP/1.1\" 200 - \"-\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36\"\u001b[39m","timestamp":"2025-09-21 09:34:53:3453"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m::1 - - [21/Sep/2025:14:34:53 +0000] \"GET /api-docs/swagger-ui-standalone-preset.js HTTP/1.1\" 200 - \"-\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36\"\u001b[39m","timestamp":"2025-09-21 09:34:53:3453"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m::1 - - [21/Sep/2025:14:34:53 +0000] \"GET /api-docs/swagger-ui-bundle.js HTTP/1.1\" 200 - \"-\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36\"\u001b[39m","timestamp":"2025-09-21 09:34:53:3453"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m::1 - - [21/Sep/2025:14:34:54 +0000] \"GET /api-docs/favicon-32x32.png HTTP/1.1\" 200 628 \"-\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36\"\u001b[39m","timestamp":"2025-09-21 09:34:54:3454"}
{"data":{"avatar":"string","confirmPassword":"string","dateOfBirth":"2025-09-21","email":"user@example.com","firstName":"string","lastName":"string","password":"stringst","phone":"string","username":"string"},"error":"Password must contain at least 8 characters with uppercase, lowercase, number and special character, Passwords do not match, Invalid phone number format, avatar must be a valid uri","level":"\u001b[33mwarn\u001b[39m","message":"\u001b[33mValidation error on body:\u001b[39m","method":"POST","timestamp":"2025-09-21 09:35:08:358","url":"/api/auth/register"}
{"error":{"isOperational":true,"name":"AppError","status":"fail","statusCode":400},"ip":"::1","level":"\u001b[31merror\u001b[39m","message":"\u001b[31mError:\u001b[39m","method":"POST","stack":"AppError: Validation error: Password must contain at least 8 characters with uppercase, lowercase, number and special character, Passwords do not match, Invalid phone number format, avatar must be a valid uri\n    at /home/sri/Documents/angular-todo-application/Back-End/express-rest-todo-api/src/middleware/validation.js:193:15\n    at Layer.handleRequest (/home/sri/Documents/angular-todo-application/Back-End/express-rest-todo-api/node_modules/router/lib/layer.js:152:17)\n    at next (/home/sri/Documents/angular-todo-application/Back-End/express-rest-todo-api/node_modules/router/lib/route.js:157:13)\n    at /home/sri/Documents/angular-todo-application/Back-End/express-rest-todo-api/node_modules/express-rate-limit/dist/index.cjs:899:7\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async /home/sri/Documents/angular-todo-application/Back-End/express-rest-todo-api/node_modules/express-rate-limit/dist/index.cjs:782:5","timestamp":"2025-09-21 09:35:08:358","url":"/api/auth/register","userAgent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32m::1 - - [21/Sep/2025:14:35:08 +0000] \"POST /api/auth/register HTTP/1.1\" 400 - \"-\" \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36\"\u001b[39m","timestamp":"2025-09-21 09:35:08:358"}
{"error":{"body":"{\n  \"username\": \"sri,\n  \"email\": \"sri@example.com\",\n  \"password\": \"sri@123\",\n  \"confirmPassword\": \"sri@123\",\n  \"firstName\": \"sri\",\n  \"lastName\": \"cloud\",\n  \"phone\": \"925922415\",\n  \"dateOfBirth\": \"1999-09-09\",\n  \"avatar\": \"iloveu\"\n}","expose":true,"status":400,"statusCode":400,"type":"entity.parse.failed"},"ip":"::1","level":"\u001b[31merror\u001b[39m","message":"\u001b[31mError:\u001b[39m","method":"POST","stack":"SyntaxError: Bad control character in string literal in JSON at position 21 (line 2 column 20)\n    at JSON.parse (<anonymous>)\n    at parse (/home/sri/Documents/angular-todo-application/Back-End/express-rest-todo-api/node_modules/body-parser/lib/types/json.js:77:19)\n    at /home/sri/Documents/angular-todo-application/Back-End/express-rest-todo-api/node_modules/body-parser/lib/read.js:123:18\n    at AsyncResource.runInAsyncScope (node:async_hooks:214:14)\n    at invokeCallback (/home/sri/Documents/angular-todo-application/Back-End/express-rest-todo-api/node_modules/raw-body/index.js:238:16)\n    at done (/home/sri/Documents/angular-todo-application/Back-End/express-rest-todo-api/node_modules/raw-body/index.js:227:7)\n    at IncomingMessage.onEnd (/home/sri/Documents/angular-todo-application/Back-End/express-rest-todo-api/node_modules/raw-body/index.js:287:7)\n    at IncomingMessage.emit (node:events:519:28)\n    at endReadableNT (node:internal/streams/readable:1698:12)\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)","timestamp":"2025-09-21 09:36:29:3629","url":"/api/auth/register","userAgent":"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/140.0.0.0 Safari/537.36"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32müöÄ Todo API Server running on port 3000\u001b[39m","timestamp":"2025-09-21 09:37:30:3730"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32müìö API Documentation: http://localhost:3000/api-docs\u001b[39m","timestamp":"2025-09-21 09:37:30:3730"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32müè• Health Check: http://localhost:3000/health\u001b[39m","timestamp":"2025-09-21 09:37:30:3730"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32müåç Environment: development\u001b[39m","timestamp":"2025-09-21 09:37:30:3730"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32mConnected to MongoDB\u001b[39m","timestamp":"2025-09-21 09:37:30:3730"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32müöÄ Todo API Server running on port 3000\u001b[39m","timestamp":"2025-09-21 10:38:39:3839"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32müìö API Documentation: http://localhost:3000/api-docs\u001b[39m","timestamp":"2025-09-21 10:38:39:3839"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32müè• Health Check: http://localhost:3000/health\u001b[39m","timestamp":"2025-09-21 10:38:39:3839"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32müåç Environment: development\u001b[39m","timestamp":"2025-09-21 10:38:39:3839"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32mConnected to MongoDB\u001b[39m","timestamp":"2025-09-21 10:38:39:3839"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32müöÄ Todo API Server running on port 3000\u001b[39m","timestamp":"2025-09-29 18:32:51:3251"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32müìö API Documentation: http://localhost:3000/api-docs\u001b[39m","timestamp":"2025-09-29 18:32:51:3251"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32müè• Health Check: http://localhost:3000/health\u001b[39m","timestamp":"2025-09-29 18:32:51:3251"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32müåç Environment: development\u001b[39m","timestamp":"2025-09-29 18:32:51:3251"}
{"level":"\u001b[32minfo\u001b[39m","message":"\u001b[32mConnected to MongoDB\u001b[39m","timestamp":"2025-09-29 18:32:51:3251"}
